// <auto-generated />
using ContactManager.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ContactManager.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20180130005643_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactManager.Model.Customer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Email");

                    b.Property<long?>("NameID");

                    b.HasKey("ID");

                    b.HasIndex("NameID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ContactManager.Model.Name", b =>
                {
                    b.Property<long>("NameID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("First");

                    b.Property<string>("Last");

                    b.HasKey("NameID");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("ContactManager.Model.Supplier", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("NameID");

                    b.Property<string>("Telephone");

                    b.HasKey("ID");

                    b.HasIndex("NameID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ContactManager.Model.Customer", b =>
                {
                    b.HasOne("ContactManager.Model.Name", "Name")
                        .WithMany()
                        .HasForeignKey("NameID");
                });

            modelBuilder.Entity("ContactManager.Model.Supplier", b =>
                {
                    b.HasOne("ContactManager.Model.Name", "Name")
                        .WithMany()
                        .HasForeignKey("NameID");
                });
#pragma warning restore 612, 618
        }
    }
}
